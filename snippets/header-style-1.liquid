<style>
  #shopify-section-{{ section.id}} {
    background: #fff;
  }
  .header-style-1-container {
    position: relative;
  }
  .hs1-top-wrapper {
    display: grid;
    grid-template-columns: {{ section.settings.logo_width_desktop | append: 'px' }} 1fr auto;
    align-items: center;
    margin-block: 8px;
  }
  .hs1__search-section{
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .search-input-form{
    position: relative;
  }
  .search-input-form input{
    background: rgba(234, 9, 75, 0.05);
    min-width: 453px;
    padding: 12px 10px 12px 48px;
    color: #000;
    font-size: 13px;
    line-height: normal;
    border: none;
    outline: none;
    box-shadow: none;
  }
  .search-input-form input::placeholder{
    color: #BFBFBF;
    font-size: 13px;
    line-height: normal;
  }
  form.search-input-form  > input[type="search"]::-webkit-search-cancel-button {
   -webkit-appearance: none;
    height: 1em;
    width: 1em;
    border-radius: 50em;
    background: url(https://pro.fontawesome.com/releases/v5.10.0/svgs/solid/times-circle.svg) no-repeat 50% 50%;
    background-size: contain;
    position: relative;
    right: 15px;

  }
  form.search-input-form  > button{
    font-size: 0;
    line-height: 0;
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    left: 0px;
    background-color: transparent;
    border: none;
    outline: none;
    box-shadow: none;
  }
  .search-input-form button span{
     display: inline-block;
  }
  .hs1-icons-section {
    justify-self: flex-end;
    display: flex;
    gap: 40px;
    align-items: center;
    justify-content: flex-end;
  }
  .hs1-icons-section a{
    text-decoration: none;
    display: flex;
    align-items: center;
    gap: 5px;
  }
  .hs1-icons-section a svg{
    width: 28px;
  }
  .hs1-icons-section a span{
    color: #000;
    font-size: 13px;
    line-height: normal;
    text-transform: capitalize;
  }
  .hs1-logo-section {
    text-decoration: none;
    font-size: 0;
    line-height: 0;
  }
  .hs1-logo-section img{
    width: 100%;
    height: auto;
    object-fit: cover;
  }
  .hs1-shop-name{
    color: #000;
    font-size: 24px;
    font-style: normal;
    font-weight: 600;
    line-height: normal;
    text-align: center;
  }
  .event-none{
    pointer-events: none;
  }


  @media screen and (min-width: 1201px){
    .close-search-drawer{
      display: none;
    }
  }
  @media screen and (max-width: 1200px){
    predictive-search{
      position: fixed;
      top: 0;
      z-index: 99;
      background: #fff;
      width: 100%;
      padding: 60px 0 16px;
      box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;
      height: 100vh;
      transform: translateX(100%);
      transition: all 0.3s;
    }
    [search-drawer-opened] predictive-search{
      transform: translateX(0);
    }
    .search-input-form {
      position: relative;
      max-width: 95%;
      margin: 0 auto;
      min-width: 95%;
    }
    .close-search-drawer{
      position: absolute;
      top: 20px;
      right: 15px;
      font-size: 0;
      line-height: 0;
    }
    .search-input-form input {
      background: rgba(234, 9, 75, 0.05);
      min-width: 100%;
      padding: 14px 10px 14px 48px;
      color: #000;
      font-size: 13px;
      line-height: normal;
      border: none;
      outline: none;
      box-shadow: none;
    }
    form.search-input-form  > button {
      top: 0;
      transform: translateY(25%);
    }
    .close-search-drawer{
      display: inline-block;
    }
    .close-search-drawer svg path{
      stroke: #000;
    }
  }
</style>

{{ 'gelico-dropdown-menu.css' | asset_url | stylesheet_tag }}
{{ 'gelico-megamenu.css' | asset_url | stylesheet_tag }}

{% liquid
  assign enable_megamenu = section.settings.enable_megamenu | strip | strip_html | downcase | remove: ' ' | split: ','
  assign menuLength = section.settings.main_menu.links.size
  assign offset_large_device = 7
  # assign offset_medium_device = 5
%}

<div class="header-style-1-container">
  <div class="">
    <div class="header-style-1-wrapper">
      <div class="hs1-top-wrapper page-width">
        <a href="/" class="hs1-logo-section" aria-label="logo desktop">
          {% liquid
            assign logo_desktop = section.settings.logo_desktop
          %}
          {% unless logo_desktop == blank %}
            {{ logo_desktop | image_url: width: logo_desktop.width | image_tag: loading: 'lazy' }}
          {% else %}
            <h2 class="hs1-shop-name">{{ section.settings.shop_name }}</h2>
          {% endunless %}
        </a>
        <div class="hs1__search-section">
          <div class="hs1__search-wrapper">
            {% render 'predictive-search-form', section: section %}
            {% comment %}
              <input type="search" id="search" name="search" placeholder="SEARCH">
              {% unless section.settings.search_icon == blank %}
                <span>
                  {{ section.settings.search_icon }}
                </span>
              {% else %}
                <span>
                  {% render 'gelico-icons', name: 'search' %}
                </span>
              {% endunless %}
            {% endcomment %}
          </div>
        </div>
        <div class="hs1-icons-section">
          {% unless section.settings.usre_icon == blank %}
            <a href="/account" aria-label="header account icon">
              {{ section.settings.usre_icon }}
              <span>ACCOUNT</span>
            </a>
          {% else %}
            <a href="/account" aria-label="header account icon">
              {% render 'gelico-icons', name: 'user' %}
              <span>ACCOUNT</span>
            </a>
          {% endunless %}
          {% unless section.settings.reward_icon == blank %}
            <a href="#" aria-label="header reward icon">
              {{ section.settings.reward_icon }}
              <span>REWARDS</span>
            </a>
          {% else %}
            <a href="#" aria-label="header reward icon">
              {% render 'gelico-icons', name: 'reward' %}
              <span>REWARDS</span>
            </a>
          {% endunless %}
          {% unless section.settings.cart_icon == blank %}
            <a class="new-header-cart-icon" href="/cart" aria-label="header cart icon">
              {{ section.settings.cart_icon }}
              <span>BAG</span>
            </a>
          {% else %}
            <a class="new-header-cart-icon" href="/cart" aria-label="header cart icon">
              {% render 'gelico-icons', name: 'cart' %}
              <span>BAG</span>
            </a>
          {% endunless %}
        </div>
      </div>
      <div class="hs1-menu-wrapper">
        {% comment %}
          {% render 'custom-mega-menu', section: section, block: block %}
        {% endcomment %}
        <ul class="hs1-first-layer-ul">
          {% for link in section.settings.main_menu.links limit: offset_large_device %}
            {% liquid
              assign filrstLabeTitle = link.title | strip | downcase | remove: ' '
              assign isMegaEnable = false
              if enable_megamenu contains filrstLabeTitle
                assign isMegaEnable = true
              endif
            %}
            <li class="hs1-first-layer-li {% if isMegaEnable %}hs1-megamenu-li{% else %}hs1-dropdown-li{% endif %}">
              <div class="hs1-menu-icon-wrapper">
                {% unless link.links == blank %}
                  <a href="{{ link.url }}" class="hs1-first-layer-a event-none" aria-level="{{ link.title }}">
                    {{- link.title -}}
                  </a>
                  <div class="hs1-icon-wrapper">
                    {% render 'gelico-icons', name: 'plus', class: 'first-layer hs1-plus-icon' %}
                    {% render 'gelico-icons', name: 'minus', class: 'first-layer hs1-minus-icon' %}
                  </div>
                {% else %}
                  <a href="{{ link.url }}" class="hs1-first-layer-a">{{ link.title }}</a>
                {% endunless %}
              </div>
              {% unless link.links == blank %}
                {% if isMegaEnable %}
                  {% render 'gelico-header-megamenu', link: link, section: section %}

                {% else %}
                  {% render 'gelico-header-dropdown-menu', link: link %}
                {% endif %}
              {% endunless %}
            </li>
          {% endfor %}
          {% if menuLength > 7 %}
            <li class="hs1-first-layer-li hs1-dropdown-li more__menus">
              <div class="hs1-menu-icon-wrapper">
                <a href="{{ link.url }}" class="hs1-first-layer-a event-none" aria-level="more menu">MORE</a>
                <div class="hs1-icon-wrapper">
                  {% render 'gelico-icons', name: 'plus', class: 'first-layer hs1-plus-icon' %}
                  {% render 'gelico-icons', name: 'minus', class: 'first-layer hs1-minus-icon' %}
                </div>
              </div>
              {% render 'gelico-header-more-menu', section: section, offset: offset_large_device, hs: 'hs1' %}
            </li>
          {% endif %}
        </ul>
      </div>
    </div>
  </div>
</div>

<script>
  // let megamenuSecondLayerLi = document.querySelectorAll('.hs1-megamenu-li');

  // megamenuSecondLayerLi.forEach((megamenuLi) => {
  //   let megamenuThirdLayerLi = megamenuLi.querySelectorAll('.hs1-megamenu-second-layer-li'),
  //     megamenuSecondlayerUl = megamenuLi.querySelector('.hs1-megamenu-second-layer-ul'),
  //     maxTLHeight = 0;

  //   megamenuThirdLayerLi.forEach((li) => {
  //     if (maxTLHeight < li.clientHeight) {
  //       maxTLHeight = li.clientHeight;
  //     }
  //   });
  //   if(maxTLHeight < 300)
  //     megamenuSecondlayerUl.style.maxHeight = maxTLHeight + 300 + 'px';
  //   else if(maxTLHeight > 300)
  //   megamenuSecondlayerUl.style.maxHeight = maxTLHeight + 25 + 'px';
  // });


  let megamenuSecondLayerLi = document.querySelectorAll('.hs1-megamenu-li');

  megamenuSecondLayerLi.forEach((megamenuLi) => {
    let megamenuThirdLayerLi = megamenuLi.querySelectorAll('.hs1-megamenu-second-layer-li'),
      megamenuSecondlayerUl = megamenuLi.querySelector('.hs1-megamenu-second-layer-ul'),
      megaContainer = megamenuSecondlayerUl.closest(".hs1-megamenu-container").clientHeight;
      maxTLHeight = 0;
      megamenuSecondlayerUl.style.maxHeight = megaContainer + 'px';
  });
</script>
<script>
  let mainMenu = document.querySelector(".hs1-first-layer-ul");
  let mainMenuItems = mainMenu.querySelectorAll(".hs1-first-layer-li");

  mainMenuItems.forEach(menuItem => {
    let subMenus = menuItem.querySelectorAll(".hs1-megamenu-second-layer-ul");

    subMenus.forEach(subMenu => {
      let subMenuItems = subMenu.querySelectorAll(".hs1-megamenu-second-layer-li");

      subMenuItems.forEach(subMenuItem => {
        let nestedSubMenus = subMenuItem.querySelectorAll(".hs1-megamenu-third-layer-ul");

        if(nestedSubMenus.length > 0) {
          subMenu.classList.add("grid__styles");
        }
      });
    });
  });
</script>
